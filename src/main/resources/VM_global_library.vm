#macro(result_id $doc)result-$doc.getFieldValue('dataset_id')#end

#macro(f $f)$doc.getFieldValue($f)#end

#macro(field $f)
  #foreach($v in $doc.getFieldValues($f))
    $v
  #end
#end  

#macro(field_br $f)
  #foreach($v in $doc.getFieldValues($f))
    $v<br/>
  #end
#end  

#macro(field_ul $field)
  #set($values = $doc.getFieldValues($field))
  #if($values.size() > 1)
    <ul>
      #foreach($value in $values)
        <li>$value</li>
      #end
    </ul>
  #else
    $values.get(0)
  #end
#end

#macro(field_et_al $field $max)
  #set($values = $doc.getFieldValues($field))
  #foreach($value in $values)
    #if($velocityCount > $max)
      (et. al.)
      #break
    #end
    $value
    #if($velocityHasNext)&bullet;#end
  #end
  
#end

## escape method especially for href attribute
#macro(esc $txt)$txt.replaceAll("&", "&amp;").replaceAll("\"", "&quot;")#end

## return q param if defined
#macro(q)#if($request.originalParams.q)$request.originalParams.q#end#end

#macro(param $key)$request.params.getParams($key)#end

#macro(qurl)q=$!{esc.url("#q()")}#end
#macro(fqs_generic $fqs)#foreach($fq in $fqs)&fq=$esc.url($fq)#end#end
#macro(fqs)#fqs_generic($request.params.getParams('fq'))#end

#macro(fqs_without $remove_fq)
#set($cur_fqs = $request.params.getParams('fq'))
#set($new_fqs = [])
#foreach($fq in $cur_fqs)#if(!($fq == $remove_fq))#set($null = $new_fqs.add($fq))#end#end
#fqs_generic($new_fqs)
#end

#macro(lens)#qurl#fqs#end

#macro(url_for_lens)?#lens#end
#macro(url_for_start $start)#url_for_lens&start=$start#end
#macro(url_for_facet_filter $field $value)#url_for_lens&fq=$esc.url($field):%22$esc.url($value)%22#end
#macro(url_for_removing_facet_filter $filter)?#qurl#fqs_without($filter)#end

#macro(normalize_facet $facet)$facet.replaceAll("_facet","")#end

